say -v "Alice"  -o mask.wav --data-format=LEF32@32000 "I will ask, Please put on a mask."

tensorflow:

    sudo apt-get install -y libhdf5-dev libc-ares-dev libeigen3-dev
    python3 -m pip install keras_applications==1.0.8 --no-deps
    python3 -m pip install keras_preprocessing==1.1.0 --no-deps
    python3 -m pip install h5py==2.9.0
    sudo apt-get install -y openmpi-bin libopenmpi-dev
    sudo apt-get install -y libatlas-base-dev
    python3 -m pip install -U six wheel mock
    pip3 install tensorflow

OpenCV:
    sudo apt update
    sudo apt upgrade
    sudo apt install cmake build-essential pkg-config git
    sudo apt install libjpeg-dev libtiff-dev libjasper-dev libpng-dev libwebp-dev libopenexr-dev
    sudo apt install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libdc1394-22-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev
    sudo apt install libgtk-3-dev libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5
    sudo apt install libatlas-base-dev liblapacke-dev gfortran
    sudo apt install libhdf5-dev libhdf5-103
    sudo apt install python3-dev python3-pip python3-numpy

    sudo nano /etc/dphys-swapfile
        CONF_SWAPSIZE=2048
    sudo systemctl restart dphys-swapfile

    git clone https://github.com/opencv/opencv.git
    git clone https://github.com/opencv/opencv_contrib.git
    mkdir ~/opencv/build
    cd ~/opencv/build

    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
        -D ENABLE_NEON=ON \
        -D ENABLE_VFPV3=ON \
        -D BUILD_TESTS=OFF \
        -D INSTALL_PYTHON_EXAMPLES=OFF \
        -D OPENCV_ENABLE_NONFREE=ON \
        -D CMAKE_SHARED_LINKER_FLAGS=-latomic \
        -D BUILD_EXAMPLES=OFF ..

    make -j$(nproc)
    sudo make install
    sudo ldconfig

    sudo nano /etc/dphys-swapfile
        CONF_SWAPSIZE=100
        sudo systemctl restart dphys-swapfile


sklearn:
    pip3 install sklearn

    sudo bazel --host_jvm_args=-Xmx1624m build \
                 --config=noaws \
                 --config=nogcp \
                 --config=nohdfs \
                 --config=nonccl \
                 --config=monolithic \
                 --config=v2 \
                 --local_cpu_resources=1 \
                 --copt=-mfpu=neon-vfpv4 \
                 --copt=-ftree-vectorize \
                 --copt=-funsafe-math-optimizations \
                 --copt=-ftree-loop-vectorize \
                 --copt=-fomit-frame-pointer \
                 --copt=-DRASPBERRY_PI \
                 --host_copt=-DRASPBERRY_PI \
                 --linkopt=-Wl,-latomic \
                 --host_linkopt=-Wl,-latomic \
                 //tensorflow/tools/pip_package:build_pip_package
